version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: prompt_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-prompt_manager}
      MYSQL_USER: ${DB_USER:-promptuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-promptpass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - prompt_network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Flask应用服务
  web:
    build: .
    container_name: prompt_web
    restart: always
    environment:
      FLASK_ENV: ${FLASK_ENV:-production}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-prompt_manager}
      DB_USER: ${DB_USER:-promptuser}
      DB_PASSWORD: ${DB_PASSWORD:-promptpass}
      SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-change-this-jwt-key}
    ports:
      - "5002:5002"
    volumes:
      - ./app:/app/app
      - ./config:/app/config
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - prompt_network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: prompt_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-enabled
      - ./app/static:/usr/share/nginx/html/static
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - prompt_network

# 定义卷
volumes:
  mysql_data:
    driver: local

# 定义网络
networks:
  prompt_network:
    driver: bridge